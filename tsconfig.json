/**
 * 配置编译这个项目的根文件和编译选项,
 * 1. 不带任何输入文件的情况下调用tsc，编译器会从当前目录开始去查找tsconfig.json文件，逐级向上搜索父目录。
 * 2. 不带任何输入文件的情况下调用tsc，且使用命令行参数--project（或-p）指定一个包含tsconfig.json文件的目录。
 * 3. 当命令行上指定了输入文件时，tsconfig.json文件会被忽略。
 */
{
  //编译选项列表  
  "compilerOptions": {
    "baseUrl": ".",
    "outDir": "build/dist", //重定向输出目录
    "module": "esnext", //指定生成commonjs模块系统代码
    "target": "es5",    //指定生成ECMAScript的目标版本
    "lib": ["es6", "dom"],  
    "sourceMap": true,  //启用soueceMap
    "allowJs": true,
    "jsx": "react", //在 .tsx文件里支持JSX
    "removeComments": true, //删除所有注释，除了以 /!*开头的版权信息
    "moduleResolution": "node",
    "rootDir": "src",
    "forceConsistentCasingInFileNames": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noImplicitAny": true,  //在表达式和声明上有隐含的 any类型时报错
    "strictNullChecks": true,
    "suppressImplicitAnyIndexErrors": true,
    "noUnusedLocals": true
  },
  "exclude": [
    "node_modules",
    "build",
    "scripts",
    "acceptance-tests",
    "webpack",
    "jest",
    "src/setupTests.ts"
  ]
}
